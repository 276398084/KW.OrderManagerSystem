@model KeWeiOMS.Domain.OrderType
@{
  
}
<script type="text/javascript">
    $.extend($.fn.datagrid.defaults.editors, {
        combogrid: {
            init: function (container, options) {
                var input = $('<input type="text" class="datagrid-editable-input">').appendTo(container);
                input.combogrid(options);
                return input;
            },
            destroy: function (target) {
                $(target).combogrid('destroy');
            },
            getValue: function (target) {
                return $(target).combogrid('getValue');
            },
            setValue: function (target, value) {
                $(target).combogrid('setValue', value);
            },
            resize: function (target, width) {
                $(target).combogrid('resize', width);
            }
        }
    });
    $(function () {
        $('#dg_product').datagrid({
            // url: '@Url.Action("List", "OrderProduct")',
            width: 700,
            toolbar: [{
                id: 'btnadd',
                text: '添加',
                iconCls: 'icon-add',
                handler: function () {

                    addp();
                }
            }, {
                id: 'btndel',
                text: '删除',
                iconCls: 'icon-add',
                handler: function () {
                    if (editIndex == undefined) {
                        return;
                    }
                    $('#dg_product').datagrid('cancelEdit', editIndex)
                            .datagrid('deleteRow', editIndex);
                    editIndex = undefined;
                }
            }, {
                id: 'btnsave',
                text: '保存',
                iconCls: 'icon-save',
                handler: function () {
                    accept();
                }
            }],
            onClickRow: onClickRow
        });

        $('#c_CurrencyCode').combogrid({
            panelWidth: 360,
            value: 'USD',
            idField: 'CurrencyCode',
            textField: 'CurrencyName',
            url: '/Currency/List',
            fit: true,
            columns: [[
                { field: 'CurrencyName', title: '货币', width: 150 },
                { field: 'CurrencyCode', title: '代码', width: 100 },
                { field: 'CurrencyValue', title: '汇率', width: 100 }

            ]]
        });
        $('#c_LogisticMode').combogrid({
            panelWidth: 360,

            idField: 'LogisticsCode',
            textField: 'LogisticsName',
            url: '/LogisticsMode/ALLList',
            fit: true,
            columns: [[
                { field: 'LogisticsName', title: '名称', width: 250 },
                { field: 'LogisticsCode', title: '代码', width: 100 }
            ]]
        });
        $('#c_Country').combogrid({
            panelWidth: 360,
            value: 'USD',
            idField: 'CountryCode',
            textField: 'ECountry',
            url: '/Country/ListALL',
            fit: true,
            mode: 'remote',
            columns: [[
                { field: 'CCountry', title: '中文', width: 150 },
                { field: 'ECountry', title: '英文', width: 100 },
                { field: 'CountryCode', title: '简码', width: 100 }
            ]],
            onChange: changeCountry
        });
    });

    function changeCountry(n, o) {
        //$('#c_Country').valueOf(n);
    }

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) {
            return true;
        }
        if ($('#dg_product').datagrid('validateRow', editIndex)) {
            $('#dg_product').datagrid('endEdit', editIndex);

            editIndex = undefined;

            return true;

        } else {
            return false;
        }
    }
    function onClickRow(index) {
        if (editIndex != index) {
            if (endEditing()) {
                $('#dg_product').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndex = index;
            } else {
                $('#dg_product').datagrid('selectRow', editIndex);
            }
        }
    }
    function addp() {
        if (endEditing()) {
            $('#dg_product').datagrid('appendRow', { Qty: 1, Price: 0 });
            editIndex = $('#dg_product').datagrid('getRows').length - 1;
            $('#dg_product').datagrid('selectRow', editIndex)
                    .datagrid('beginEdit', editIndex);
        }
    }
    function accept() {
        if (endEditing()) {
            $('#dg_product').datagrid('acceptChanges');
        }
    }
    function addOrder() {
        var effectRow = new Object();
        effectRow["rows"] = JSON.stringify($('#dg_product').datagrid("getRows"));
        $.post("/OrderProduct/Save/", effectRow, function (rsp) {
            if (rsp.IsSuccess) {
                $.messager.show("提示", "提交成功！");
            }
        }, "JSON").error(function () {
            $.messager.show("提示", "提交错误了！");
        });
        formPost('c_form', '@Url.Action("Create", "Order")', 'c_dlg', 'dg', 't');
        $('c_form').clear();
    }

</script>


@using (Html.BeginForm("Create", "Order", FormMethod.Post, new { id = "c_form" }))
{
    <input type="button" value="保存" onclick="addOrder();" />
    <fieldset>
        <legend>订单信息</legend>
        <table class="editForm">

            <tr>
                <td>
                    @Html.LabelFor(model => model.OrderNo, "订单编号:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Id, new { @id = "c_Id" })
                    @Html.HiddenFor(model => model.OrderNo, new { @id = "c_OrderNo" })
                </td>
                <td>
                    @Html.LabelFor(model => model.OrderExNo, "外部编号:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.OrderExNo, new { @id = "c_OrderExNo" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Amount, "总金额:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.CurrencyCode, new { @id = "c_CurrencyCode" })<br />
                    @Html.TextBoxFor(model => model.Amount, new { @id = "c_Amount" })
                </td>
                <td>
                    @Html.LabelFor(model => model.TId, "流水交易号:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.TId, new { @id = "c_TId" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.BuyerName, "买家:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.BuyerName, new { @id = "c_BuyerName" })
                </td>
                <td>
                    @Html.LabelFor(model => model.BuyerEmail, "买家邮箱:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.BuyerEmail, new { @id = "c_BuyerEmail" })
                    @Html.HiddenFor(model => model.BuyerId, new { @id = "c_BuyerId" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.BuyerMemo, "买家留言:")
                </td>
                <td colspan="3">
                    @Html.TextBoxFor(model => model.BuyerMemo, new { @id = "c_BuyerMemo" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.SellerMemo, "商家留言:")
                </td>
                <td colspan="3">
                    @Html.TextBoxFor(model => model.SellerMemo, new { @id = "c_SellerMemo" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.CutOffMemo, "包裹截留留言:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.CutOffMemo, new { @id = "c_CutOffMemo" })
                </td>
            </tr>
        </table>
    </fieldset>
    <fieldset>
        <legend>产品信息</legend>
        <table id="dg_product" class="easyui-datagrid" rownumbers="true" singleselect="true">
            <thead>
                <tr>
                    <th field="ExSKU" width="80" data-options="editor:'text'">ExSKU
                    </th>

                    <th field="Title" width="100" data-options="editor:'text'">名称
                    </th>

                    <th field="SKU" width="80" data-options="
                        editor:{
							type:'combogrid',
							options:{
								panelWidth: 410,
                                mode: 'remote',
                                idField: 'SKU',
                                textField: 'SKU',
                                url: '/Product/ListQ',
                                fit: true,
                                required:true,
                                columns: [[
                                    { field: 'SKU', title: 'SKU', width: 100 },
                                    { field: 'ProductName', title: 'Title', width: 200 },
                                    { field: 'Standard', title: '规格', width: 100 }

                                ]]
							}
						}
                        ">SKU
                    </th>
                    <th field="Qty" width="80" data-options="editor:{ type: 'numberbox'}">数量
                    </th>
                     <th field="Standard" width="80" data-options="editor:'text'">规格
                    </th>
                    <th field="Remark" width="100" data-options="editor:'text'">描述
                    </th>
                    <th field="Price" width="80" data-options="editor:{ type: 'numberbox', options: { precision: 5 }}">价格
                    </th>
                    <th field="Url" width="100" data-options="editor:'text'">网址
                    </th>
                </tr>
            </thead>
        </table>
    </fieldset>
    <fieldset>
        <legend>地址信息</legend>
        <table class="editForm">
            <tr>
                <td>
                    @Html.LabelFor(model => model.LogisticMode, "发货方式:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.LogisticMode, new { @id = "c_LogisticMode" })
                </td>
                <td></td>
                <td>


                    @Html.HiddenFor(model => model.AddressId, new { @id = "c_AddressId" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.AddressInfo.Addressee, "收件人:")
                </td>
                <td colspan="3">
                    @Html.TextBoxFor(model => model.AddressInfo.Addressee, new { @id = "c_Addressee" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.AddressInfo.Tel, "电话:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AddressInfo.Tel, new { @id = "c_Tel" })
                </td>
                <td>
                    @Html.LabelFor(model => model.AddressInfo.Phone, "手机:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AddressInfo.Phone, new { @id = "c_Phone" })
                </td>
            </tr>



            <tr>
                <td>
                    @Html.LabelFor(model => model.AddressInfo.Street, "街道:")
                </td>
                <td colspan="3">
                    @Html.TextBoxFor(model => model.AddressInfo.Street, new { @id = "c_Street" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.AddressInfo.County, "区:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AddressInfo.County, new { @id = "c_County" })
                </td>
                <td>
                    @Html.LabelFor(model => model.AddressInfo.City, "市:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AddressInfo.City, new { @id = "c_City" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.AddressInfo.Province, "省:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AddressInfo.Province, new { @id = "c_Province" })
                </td>
                <td>
                    @Html.LabelFor(model => model.AddressInfo.Country, "国家:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AddressInfo.Country, new { @id = "c_Country" })
                    @Html.HiddenFor(model => model.AddressInfo.CountryCode, new { @id = "c_CountryCode" })
                </td>
            </tr>




        </table>
    </fieldset>
   
}
