@model KeWeiOMS.Domain.AccountType
@{
    Layout = null;
}

<script type="text/javascript">
    $(function () {
        $('#c_Platform').combotree({
            url: '/Home/Platform',
            valueField: 'id',
            textField: 'text',
            required: true,
            width: 150,
           onChange: pChange
        });
        $('#c_Platform').combotree("setValue", "EBay");
        pChange('Ebay', "");
    });

    function pChange(n, o) {
        $('#tr1').hide();
        $('#tr2').hide();
        $('#tr3').hide();
        $('#btnEbayLogin').hide();
        $('#btnEbayToken').hide();
        $('#btnAliLogin').hide();
        if (n == "Ebay") {
            $('#tr3').show();
            $('#btnEbayLogin').show();
            $('#btnEbayToken').show();
        }
        if (n == "SMT") {
            $('#tr3').show();
            $('#btnAliLogin').show();
        }
    }
    var code = "";
    function aliLogin() {
        jQuery.ajax({
            url: "/Account/GetAliLoginUrl",
            type: "post",
            success: function (res) {
                if (res.IsSuccess) {
                  
                    window.open(res.Result);
                } else {
                    alert(res.ErrorMsg);
                }
            }
        });
    }
    
    function ebayLogin() {
        jQuery.ajax({
            url: "/Account/GetEbayLoginUrl",
            type: "post",
            success: function (res) {
                if (res.IsSuccess) {
                    code = res.Code;
                  
                    window.open(res.Result);
                } else {
                    alert(res.ErrorMsg);
                }
            }
        });
    }
    
    function getEbaySession() {
        jQuery.ajax({
            url: "/Account/GetEbaySession",
            type: "post",
            data:'o='+code,
            success: function (res) {
                if (res.IsError) {
                    alert(res.Message);
                } else {
                    $('#c_ApiToken').val(res.Result);
                }
            }
        });
    }
</script>1754b098-bea9-4062-a106-dfe70da16a54

@using (Html.BeginForm("Create", "Account", FormMethod.Post, new { id = "c_form" }))
{
    <fieldset>
        <table class="editForm">
            <tr>
                <td>
                    @Html.LabelFor(model => model.AccountName, "账户名称:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AccountName, new { @id = "c_AccountName" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.AccountUrl, "平台网址:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.AccountUrl, new { @id = "c_AccountUrl" })
                </td>
            </tr>

            <tr id="tr1">
                <td>
                    @Html.LabelFor(model => model.ApiKey, "APIKey:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ApiKey, new { @id = "c_ApiKey" })
                </td>
            </tr>

            <tr id="tr2">
                <td>
                    @Html.LabelFor(model => model.ApiSecret, "API密钥:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ApiSecret, new { @id = "c_ApiSecret" })
                </td>
            </tr>

            <tr id="tr3">
                <td>
                    @Html.LabelFor(model => model.ApiToken, "APIToken:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ApiToken, new { @id = "c_ApiToken" })
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input type="button" id="btnEbayLogin" onclick="ebayLogin()" value="ebay登录" />
                    <input type="button" id="btnEbayToken" onclick="getEbaySession()" value="获得Token" />
                    <input type="button" id="btnAliLogin" onclick="aliLogin()" value="获得Token" />
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Platform, "平台:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Platform, new { @id = "c_Platform" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Status, "状态:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Status, new { @id = "c_Status" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Description, "描述:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Description, new { @id = "c_Description" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Manager, "负责人:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Manager, new { @id = "c_Manager" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Phone, "负责人电话:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Phone, new { @id = "c_Phone" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Email, "负责人邮箱:")
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Email, new { @id = "c_Email" })
                </td>
            </tr>


        </table>
    </fieldset>
}
